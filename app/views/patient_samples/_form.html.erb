<script type="text/javascript">
  function searchPatient() {
    var patientName = document.getElementById("patientName").value

    var httpRequest;
    if (window.XMLHttpRequest) {
        httpRequest = new XMLHttpRequest();
    } else if (window.ActiveXObject) {
        httpRequest = new ActiveXObject("Microsoft.XMLHTTP");
    }
    httpRequest.onreadystatechange = function() {
      if (httpRequest.readyState === 4) {
        if (httpRequest.status === 200) {
          showPatients(JSON.parse(httpRequest.responseText));
        } else {
          console.log('There was a problem with the request.');
        }
      }
    }

    httpRequest.open('GET', '/openmrs/patients?name=' + patientName, true);
    httpRequest.send(null);

  }

  function selectEncounter(event) {
    var selection = event.target;
    var selectedEncounterUuid = selection.getAttribute('data-uuid');

    document.getElementById("patient_sample_encounter_name").value = selection.textContent;
    document.getElementById("patient_sample_encounter_uuid").value = selectedEncounterUuid;
  }

  function selectPatient(event) {
    var selection = event.target;

    var selectedPatientUuid = selection.getAttribute('data-uuid');
    
    document.getElementById("patient_sample_patient_name").value = selection.textContent;
    document.getElementById("patient_sample_patient_uuid").value = selectedPatientUuid;


    var httpRequest;
    if (window.XMLHttpRequest) {
        httpRequest = new XMLHttpRequest();
    } else if (window.ActiveXObject) {
        httpRequest = new ActiveXObject("Microsoft.XMLHTTP");
    }
    httpRequest.onreadystatechange = function() {
      if (httpRequest.readyState === 4) {
        if (httpRequest.status === 200) {
          showEncounters(JSON.parse(httpRequest.responseText));
        } else {
          console.log('There was a problem with the request.');
        }
      }
    }

    httpRequest.open('GET', '/openmrs/encounters?patient=' + selectedPatientUuid, true);
    httpRequest.send(null);
  }

  function showEncounters(response) {
    var encountersList = document.getElementById('encountersList');
    while(encountersList.firstChild) {
      encountersList.removeChild(encountersList.firstChild);
    }

    for(index in response.results) {
      var result = response.results[index];
      var li = document.createElement('li');
      li.onclick = selectEncounter;
      li.textContent = result.display;
      li.setAttribute("data-uuid", result.uuid);
      encountersList.appendChild(li);
    }
  }

  function showPatients(response) {
    var patientsList = document.getElementById('patientsList');
    while(patientsList.firstChild) {
      patientsList.removeChild(patientsList.firstChild);
    }

    for(index in response.results) {
      var result = response.results[index];
      var li = document.createElement('li');
      li.onclick = selectPatient;
      li.textContent = result.display;
      li.setAttribute("data-uuid", result.uuid);
      patientsList.appendChild(li);
    }
  }
</script>

<%= form_for(@patient_sample) do |f| %>
  <% if @patient_sample.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@patient_sample.errors.count, "error") %> prohibited this Sample from being registered:</h2>

      <ul>
      <% @patient_sample.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  Patient name: <input type="text" id="patientName" /> <input type="button" onclick="javascript:searchPatient();return" value="Search" />

  <ul id="patientsList">
  </ul>

  Patient: <%= f.text_field :patient_name, readonly: true %> <br />
  <%= f.hidden_field :patient_uuid %>

  <ul id="encountersList">
  </ul>

  Encounter: <%= f.text_field :encounter_name, readonly: true %> <br />
  <%= f.hidden_field :encounter_uuid %>

  Sample ID: <%= f.text_field :sample_id %>

  <div class="actions">
    <%= f.submit %>
  </div>
<% end %>
